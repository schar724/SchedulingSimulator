/**
 * GUI for the CPU Scheduling Algorithms Simulator implemented in Java Swing and NetBeans IDE
 *
 * @author scott
 * 
 * Inspiration for the Interface class was taken from the following source: https://github.com/sandunrajitha/CPU-Scheduling-Algorithms-Simulator
 */

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Random;
import javax.swing.AbstractButton;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

public class Interface extends javax.swing.JFrame {

        String selectedAlgorithm = "First Come First Served";
        int quantumNum = 1;
        int currentTime = 0;
        ArrayList<Process> processList = new ArrayList<Process>(8);
        boolean allProcessesDone = false;
        boolean algorithmSet = false;
        boolean quantumSet = false;

        /**
         * Creates new form ScheudlingAlgorithmsUI
         */
        public Interface() {
                initComponents();
                buildProcessList();
                initGanttChart();
        }

        public Interface(ArrayList<Process> procList) {
                initComponents();
                buildProcessList();
                initGanttChart();
                this.processList = procList;
                setTableData(procList);
                CPU.setprocessList(procList);
                CPU.setAlgorithm(selectedAlgorithm);
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents() {

                jPanel2 = new javax.swing.JPanel();
                buttonGroup1 = new javax.swing.ButtonGroup();
                jTabbedPane1 = new javax.swing.JTabbedPane();
                Algorithms = new javax.swing.JPanel();
                fcfs_rb = new javax.swing.JRadioButton();
                sjf_rb = new javax.swing.JRadioButton();
                srt_rb = new javax.swing.JRadioButton();
                rr_rb = new javax.swing.JRadioButton();
                jSeparator1 = new javax.swing.JSeparator();
                jPanel1 = new javax.swing.JPanel();
                labelCurrentProcess = new javax.swing.JLabel();
                avgWatingTime = new javax.swing.JLabel();
                avgTurnaroundTime = new javax.swing.JLabel();
                Throughput = new javax.swing.JLabel();
                jLabel6 = new javax.swing.JLabel();
                labelCurrentTime = new javax.swing.JLabel();
                jSeparator2 = new javax.swing.JSeparator();
                runBtn = new javax.swing.JButton();
                jScrollPane1 = new javax.swing.JScrollPane();
                resultsTable = new javax.swing.JTable();
                jLabel1 = new javax.swing.JLabel();
                cancelBtn = new javax.swing.JButton();
                ganttBackground = new javax.swing.JPanel();
                quantum = new javax.swing.JComboBox<>();
                changeData = new javax.swing.JPanel();
                jScrollPane2 = new javax.swing.JScrollPane();
                processData = new javax.swing.JTable();
                resetBtn = new javax.swing.JButton();
                randomBtn = new javax.swing.JButton();
                singleStepBtn = new javax.swing.JButton();
                example1 = new javax.swing.JButton();
                example2 = new javax.swing.JButton();
                example3 = new javax.swing.JButton();
                example4 = new javax.swing.JButton();
                example5 = new javax.swing.JButton();
                set = new javax.swing.JButton();

                

                buttonGroup1.add(fcfs_rb);
                buttonGroup1.add(sjf_rb);
                buttonGroup1.add(srt_rb);
                buttonGroup1.add(rr_rb);
                buttonGroup1.setSelected(fcfs_rb.getModel(), true);

                fcfs_rb.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                radioButtonClicked(evt);
                        }
                });

                sjf_rb.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                radioButtonClicked(evt);
                        }
                });

                srt_rb.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                radioButtonClicked(evt);
                        }
                });

                rr_rb.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                radioButtonClicked(evt);
                        }
                });

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGap(0, 100, Short.MAX_VALUE));
                jPanel2Layout.setVerticalGroup(
                                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGap(0, 100, Short.MAX_VALUE));

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                fcfs_rb.setText("First Come First Served");
                sjf_rb.setText("Shortest Job First");
                srt_rb.setText("Shortest Remaining Time First");
                rr_rb.setText("Round Robin");

                jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                labelCurrentProcess.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                labelCurrentProcess.setText("Current Process:");

                avgWatingTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                avgWatingTime.setText("Average Waiting Time: ");

                avgTurnaroundTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                avgTurnaroundTime.setText("Average Turnaround Time: ");

                Throughput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                Throughput.setText("Throughput: ");

                labelCurrentTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                labelCurrentTime.setText("Current Time: ");

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jSeparator2)
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(labelCurrentProcess)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE)
                                                                                                .addComponent(jLabel6))
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addGroup(jPanel1Layout
                                                                                                                .createParallelGroup(
                                                                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                                                false)
                                                                                                                .addComponent(Throughput)
                                                                                                                .addComponent(avgTurnaroundTime)
                                                                                                                .addComponent(labelCurrentTime)
                                                                                                                .addComponent(avgWatingTime,
                                                                                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                Short.MAX_VALUE))
                                                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                                .addContainerGap()));
                jPanel1Layout.setVerticalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(labelCurrentProcess)
                                                                                .addComponent(jLabel6))
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(labelCurrentTime)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                145,
                                                                                Short.MAX_VALUE)
                                                                .addComponent(jSeparator2,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                10,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(avgWatingTime)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(avgTurnaroundTime)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(Throughput)
                                                                .addContainerGap()));

                runBtn.setText("Run");
                runBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                runBtnMouseClicked(evt);
                        }
                });

                cancelBtn.setText("Reset");
                cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                cancelBtnMouseClicked(evt);
                        }
                });

                singleStepBtn.setText("Single Step");
                singleStepBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                singleStepBtnMouseClicked();
                        }

                });

                resultsTable.setModel(new javax.swing.table.DefaultTableModel(
                                new Object[][] {
                                                { "P1", null, null, null, null, null, null, null },
                                                { "P2", null, null, null, null, null, null, null },
                                                { "P3", null, null, null, null, null, null, null },
                                                { "P4", null, null, null, null, null, null, null },
                                                { "P5", null, null, null, null, null, null, null },
                                                { "P6", null, null, null, null, null, null, null },
                                                { "P7", null, null, null, null, null, null, null },
                                                { "P8", null, null, null, null, null, null, null }
                                },
                                new String[] {
                                                "Process", "Arrive Time", "CPU Burst", "Start Time", "Wating Time",
                                                "Remaining Time",
                                                "Finish Time", "Turn Around"
                                }) {
                        boolean[] canEdit = new boolean[] {
                                        false, false, false, false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                jScrollPane1.setViewportView(resultsTable);

                jLabel1.setText("Quantum:");

                ganttBackground.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                ganttBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

                javax.swing.GroupLayout ganttBackgroundLayout = new javax.swing.GroupLayout(ganttBackground);
                ganttBackground.setLayout(ganttBackgroundLayout);
                ganttBackgroundLayout.setHorizontalGroup(
                                ganttBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGap(0, 624, Short.MAX_VALUE));
                ganttBackgroundLayout.setVerticalGroup(
                                ganttBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGap(0, 0, Short.MAX_VALUE));

                quantum.setModel(new javax.swing.DefaultComboBoxModel<>(
                                new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
                quantum.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                quantumActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout AlgorithmsLayout = new javax.swing.GroupLayout(Algorithms);
                Algorithms.setLayout(AlgorithmsLayout);
                AlgorithmsLayout.setHorizontalGroup(
                                AlgorithmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jSeparator1)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgorithmsLayout
                                                                .createSequentialGroup()
                                                                .addGroup(AlgorithmsLayout
                                                                                .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                AlgorithmsLayout
                                                                                                                .createSequentialGroup()
                                                                                                                .addComponent(fcfs_rb)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(sjf_rb)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(srt_rb)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(rr_rb)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                                .addComponent(jLabel1)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(quantum,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                45,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                                                                111,
                                                                                                                                Short.MAX_VALUE)
                                                                                                                .addComponent(singleStepBtn)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(runBtn)
                                                                                                                .addPreferredGap(
                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(cancelBtn)
                                                                                                                .addGap(1, 1, 1))
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                AlgorithmsLayout
                                                                                                                .createSequentialGroup()
                                                                                                                .addContainerGap()
                                                                                                                .addGroup(AlgorithmsLayout
                                                                                                                                .createParallelGroup(
                                                                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                                                .addComponent(jScrollPane1)
                                                                                                                                .addGroup(AlgorithmsLayout
                                                                                                                                                .createSequentialGroup()
                                                                                                                                                .addComponent(ganttBackground,
                                                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                                                .addPreferredGap(
                                                                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                                                .addComponent(jPanel1,
                                                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                                                Short.MAX_VALUE)))))
                                                                .addContainerGap()));
                AlgorithmsLayout.setVerticalGroup(
                                AlgorithmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(AlgorithmsLayout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(
                                                                                AlgorithmsLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                .addGroup(AlgorithmsLayout
                                                                                                                .createParallelGroup(
                                                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                                .addComponent(fcfs_rb)
                                                                                                                .addComponent(sjf_rb)
                                                                                                                .addComponent(srt_rb)
                                                                                                                .addComponent(rr_rb)
                                                                                                                .addComponent(jLabel1)
                                                                                                                .addComponent(quantum,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                                .addGroup(AlgorithmsLayout
                                                                                                                .createParallelGroup(
                                                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                                .addComponent(singleStepBtn)
                                                                                                                .addComponent(runBtn)
                                                                                                                .addComponent(cancelBtn)))
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jSeparator1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                10,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                193,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(
                                                                                AlgorithmsLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                .addComponent(ganttBackground,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE)
                                                                                                .addComponent(jPanel1,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE))
                                                                .addContainerGap()));

                jTabbedPane1.addTab("Algorithms", Algorithms);

                processData.setModel(new javax.swing.table.DefaultTableModel(
                                new Object[][] {
                                                { "P1", "0", "0" },
                                                { "P2", "0", "0" },
                                                { "P3", "0", "0" },
                                                { "P4", "0", "0" },
                                                { "P5", "0", "0" },
                                                { "P6", "0", "0" },
                                                { "P7", "0", "0" },
                                                { "P8", "0", "0" }
                                },
                                new String[] {
                                                "Process", "Arrival Time", "Burst Time"
                                }) {
                        boolean[] canEdit = new boolean[] {
                                        false, true, true
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                jScrollPane2.setViewportView(processData);

                resetBtn.setText("Reset");
                resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                resetBtnMouseClicked(evt);
                        }
                });

                randomBtn.setText("Random");
                randomBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                randomBtnMouseClicked(evt);
                        }
                });

                set.setText("Set");
                set.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                setMouseClicked(evt);
                        }
                });

                example1.setText("Example 1");
                example1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                example1MouseClicked(evt);
                        }
                });

                example2.setText("Example 2");
                example2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                example2MouseClicked(evt);
                        }
                });

                example3.setText("Example 3");
                example3.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                example3MouseClicked(evt);
                        }
                });

                example4.setText("Example 4");
                example4.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                example4MouseClicked(evt);
                        }
                });

                example5.setText("Example 5");
                example5.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                example5MouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout changeDataLayout = new javax.swing.GroupLayout(changeData);
                changeData.setLayout(changeDataLayout);
                changeDataLayout.setHorizontalGroup(
                                changeDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeDataLayout
                                                                .createSequentialGroup()
                                                                .addContainerGap(305, Short.MAX_VALUE)
                                                                .addGroup(changeDataLayout
                                                                                .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addGroup(changeDataLayout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(randomBtn)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(resetBtn)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(set)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(example1)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(example2)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(example3)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(example4)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(example5))

                                                                                .addComponent(jScrollPane2,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(251, 251, 251)));
                changeDataLayout.setVerticalGroup(
                                changeDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(changeDataLayout.createSequentialGroup()
                                                                .addGap(15, 15, 15)
                                                                .addComponent(jScrollPane2,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                196,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(
                                                                                changeDataLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(resetBtn)
                                                                                                .addComponent(randomBtn)
                                                                                                .addComponent(set)
                                                                                                .addComponent(example1)
                                                                                                .addComponent(example2)
                                                                                                .addComponent(example3)
                                                                                                .addComponent(example4)
                                                                                                .addComponent(example5))
                                                                .addContainerGap(323, Short.MAX_VALUE)));

                jTabbedPane1.addTab("Change Data", changeData);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jTabbedPane1)
                                                                .addContainerGap()));
                layout.setVerticalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jTabbedPane1)
                                                                .addContainerGap()));

                pack();
        }// </editor-fold>
        
        private void setMouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);    
        }

        private void example1MouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                Random rand = new Random();
                
                processData.setValueAt("0", 0, 1);
                processData.setValueAt("1", 1, 1);
                processData.setValueAt("2", 2, 1);
                processData.setValueAt("3", 3, 1);
                processData.setValueAt("4", 4, 1);
                processData.setValueAt("5", 5, 1);
                processData.setValueAt("6", 6, 1);
                processData.setValueAt("7", 7, 1);

                for (int j = 0; j < processData.getRowCount(); j++) {
                        int k = rand.nextInt(20);
                        k += 1;
                        processData.setValueAt(k, j, 2);
                }

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);
        }

        private void example2MouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                
                processData.setValueAt("0", 0, 1);
                processData.setValueAt("3", 1, 1);
                processData.setValueAt("6", 2, 1);
                processData.setValueAt("9", 3, 1);
                processData.setValueAt("12", 4, 1);
                processData.setValueAt("15", 5, 1);
                processData.setValueAt("18", 6, 1);
                processData.setValueAt("21", 7, 1);

                processData.setValueAt("14", 0, 2);
                processData.setValueAt("12", 1, 2);
                processData.setValueAt("10", 2, 2);
                processData.setValueAt("8", 3, 2);
                processData.setValueAt("6", 4, 2);
                processData.setValueAt("4", 5, 2);
                processData.setValueAt("2", 6, 2);
                processData.setValueAt("1", 7, 2);

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);
        }

        private void example3MouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                
                processData.setValueAt("0", 0, 1);
                processData.setValueAt("3", 1, 1);
                processData.setValueAt("6", 2, 1);
                processData.setValueAt("9", 3, 1);
                processData.setValueAt("12", 4, 1);
                processData.setValueAt("15", 5, 1);
                processData.setValueAt("18", 6, 1);
                processData.setValueAt("21", 7, 1);

                processData.setValueAt("1", 0, 2);
                processData.setValueAt("2", 1, 2);
                processData.setValueAt("4", 2, 2);
                processData.setValueAt("6", 3, 2);
                processData.setValueAt("8", 4, 2);
                processData.setValueAt("10", 5, 2);
                processData.setValueAt("12", 6, 2);
                processData.setValueAt("14", 7, 2);

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);

        }

        private void example4MouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                
                processData.setValueAt("0", 0, 1);
                processData.setValueAt("5", 1, 1);
                processData.setValueAt("5", 2, 1);
                processData.setValueAt("5", 3, 1);
                processData.setValueAt("5", 4, 1);
                processData.setValueAt("5", 5, 1);
                processData.setValueAt("5", 6, 1);
                processData.setValueAt("5", 7, 1);

                processData.setValueAt("9", 0, 2);
                processData.setValueAt("5", 1, 2);
                processData.setValueAt("4", 2, 2);
                processData.setValueAt("10", 3, 2);
                processData.setValueAt("11", 4, 2);
                processData.setValueAt("11", 5, 2);
                processData.setValueAt("5", 6, 2);
                processData.setValueAt("12", 7, 2);

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);
        }

        private void example5MouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                clearTableData();
                
                
                processData.setValueAt("0", 0, 1);
                processData.setValueAt("8", 1, 1);
                processData.setValueAt("8", 2, 1);
                processData.setValueAt("4", 3, 1);
                processData.setValueAt("12", 4, 1);
                processData.setValueAt("22", 5, 1);
                processData.setValueAt("13", 6, 1);
                processData.setValueAt("21", 7, 1);

                processData.setValueAt("5", 0, 2);
                processData.setValueAt("5", 1, 2);
                processData.setValueAt("5", 2, 2);
                processData.setValueAt("5", 3, 2);
                processData.setValueAt("5", 4, 2);
                processData.setValueAt("5", 5, 2);
                processData.setValueAt("5", 6, 2);
                processData.setValueAt("5", 7, 2);

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);

        }

        private void radioButtonClicked(java.awt.event.MouseEvent evt) {
                for (Enumeration<AbstractButton> buttons = buttonGroup1.getElements(); buttons.hasMoreElements();) {
                        AbstractButton button = buttons.nextElement();
                        if (button.isSelected()) {
                                selectedAlgorithm = button.getText();
                                CPU.setAlgorithm(selectedAlgorithm);
                        }
                }
        }

        private void runBtnMouseClicked(java.awt.event.MouseEvent evt) {
                while (!allProcessesDone) {
                        singleStepBtnMouseClicked();
                }
        }

        public void quantumActionPerformed(java.awt.event.ActionEvent evt) {
                JComboBox cb = (JComboBox) evt.getSource();
                quantumNum = Integer.parseInt(cb.getSelectedItem().toString());
                CPU.setQuantum(quantumNum);
                CPU.setAlgorithm(selectedAlgorithm);
                System.out.println(CPU.getQuantum());
        }

        private ArrayList<Process> buildProcessList() {
                Process p1 = new Process(1, Integer.parseInt(processData.getValueAt(0, 1).toString()),
                                Integer.parseInt(processData.getValueAt(0, 2).toString()));
                Process p2 = new Process(2, Integer.parseInt(processData.getValueAt(1, 1).toString()),
                                Integer.parseInt(processData.getValueAt(1, 2).toString()));
                Process p3 = new Process(3, Integer.parseInt(processData.getValueAt(2, 1).toString()),
                                Integer.parseInt(processData.getValueAt(2, 2).toString()));
                Process p4 = new Process(4, Integer.parseInt(processData.getValueAt(3, 1).toString()),
                                Integer.parseInt(processData.getValueAt(3, 2).toString()));
                Process p5 = new Process(5, Integer.parseInt(processData.getValueAt(4, 1).toString()),
                                Integer.parseInt(processData.getValueAt(4, 2).toString()));
                Process p6 = new Process(6, Integer.parseInt(processData.getValueAt(5, 1).toString()),
                                Integer.parseInt(processData.getValueAt(5, 2).toString()));
                Process p7 = new Process(7, Integer.parseInt(processData.getValueAt(6, 1).toString()),
                                Integer.parseInt(processData.getValueAt(6, 2).toString()));
                Process p8 = new Process(8, Integer.parseInt(processData.getValueAt(7, 1).toString()),
                                Integer.parseInt(processData.getValueAt(7, 2).toString()));

                ArrayList<Process> processes = new ArrayList<Process>();

                processes.add(p1);
                processes.add(p2);
                processes.add(p3);
                processes.add(p4);
                processes.add(p5);
                processes.add(p6);
                processes.add(p7);
                processes.add(p8);

                CPU.setQuantum(quantumNum);
                CPU.setprocessList(processes);
                return processes;
        }

        private void clearTable() {
                DefaultTableModel model = (DefaultTableModel) resultsTable.getModel();
                model.setRowCount(0);
        }

        private void singleStepBtnMouseClicked() {// GEN-FIRST:event_buttonNextStepActionPerformed
                if (!algorithmSet) {
                        CPU.setAlgorithm(selectedAlgorithm);
                        algorithmSet = true;
                        quantumNum = Integer.parseInt(quantum.getSelectedItem().toString());
                }

                if (!quantumSet) {
                        quantumNum = Integer.parseInt(quantum.getSelectedItem().toString());
                        CPU.setQuantum(quantumNum);
                        System.out.println(quantumNum);
                        quantumSet = true;
                }

                CurrentProcess currentProcess = CPU.nextMove(currentTime);
                addCell(currentProcess.getCurrentProcess().getprocessNum());
                setTableData(currentProcess.getTableData());
                updateLabels(currentProcess.getCurrentProcess());
                currentTime++;
        }

        private void addCell(int jobNo) {
                if (currentTime == 126) {
                        clearGanttChart();
                }
                Cell cell = new Cell(jobNo);
                ganttBackground.add(cell);
                ganttBackground.revalidate();
        }

        private void clearGanttChart() {
                ganttBackground.removeAll();
                ganttBackground.repaint();
        }

        private void updateLabels(Process proc) {
                if (proc.getprocessNum() < 11 && proc.getprocessNum() > 0) {
                        labelCurrentProcess.setText("Current Process: P" + proc.getprocessNum());
                } else if (proc.getprocessNum() == 11) {
                        labelCurrentProcess.setText("Current Process: WAITING");
                } else if (proc.getprocessNum() == 0) {
                        labelCurrentProcess.setText("Current Process: FINISHED");
                        calculateAverages();
                        allProcessesDone = true;
                        cancelBtn.setEnabled(true);
                }
                labelCurrentTime.setText("Current Time: " + currentTime + "");
        }

        private void clearTableData() {
                DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
                tableModel.setRowCount(0);
        }

        private void calculateAverages() {
                DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();

                DecimalFormat formatter = new DecimalFormat("##.###");

                double totalWaitTime = 0;
                double totalTurnaroundTime = 0;
                double finishTime = 0;

                for (int i = 0; i < tableModel.getRowCount(); i++) {

                        totalWaitTime = (totalWaitTime + (int) tableModel.getValueAt(i, 4));
                }
                System.out.println("totalWaitTime " + totalWaitTime);
                avgWatingTime.setText(
                                "Average Waiting Time: " + formatter.format(totalWaitTime / tableModel.getRowCount()));

                for (int i = 0; i < tableModel.getRowCount(); i++) {

                        totalTurnaroundTime = (totalTurnaroundTime + (int) tableModel.getValueAt(i, 7));
                        System.out.println("totalTurnaroundTime =" + totalTurnaroundTime);
                        avgTurnaroundTime.setText("Average Turn Around Time: "
                                        + formatter.format(totalTurnaroundTime / tableModel.getRowCount()));
                }

                for (int i = 0; i < tableModel.getRowCount(); i++) {
                        if ((int) tableModel.getValueAt(i, 6) > finishTime) {
                                finishTime = (int) tableModel.getValueAt(i, 6);
                        }
                }

                System.out.println("finishTime " + finishTime);
                System.out.println(tableModel.getRowCount());
                Throughput.setText("Troughput: " + formatter.format(tableModel.getRowCount() / finishTime));
        }

        private void setTableData(ArrayList<Process> processList) {
                clearTableData();
                DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
                Object rowData[] = new Object[8];
                processList.forEach(proc -> {
                        rowData[0] = "P" + proc.getprocessNum();
                        rowData[1] = proc.getArrivalTime();
                        rowData[2] = proc.getBurstTime();
                        rowData[3] = proc.getStartTime();
                        rowData[4] = proc.getWaitTime();
                        rowData[5] = proc.getRemainingTime();
                        rowData[6] = proc.gettimeFinished();
                        rowData[7] = proc.getTurnAroundTime();
                        tableModel.addRow(rowData);
                });
        }

        public void initGanttChart() {
                ganttBackground.setLayout(new FlowLayout(FlowLayout.LEFT, 2, 2));
                ganttBackground.setPreferredSize(new Dimension(600, 350));
                ganttBackground.setMaximumSize(new Dimension(600, 350));
        }

        private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {
                clearTable();
                clearTableData();
                processList.clear();
                resetBtnMouseClicked(evt);
                processList = buildProcessList();
                setTableData(processList);
                Interface intFace = new Interface(processList);
                intFace.setVisible(true);
                this.dispose();
        }

        private void randomBtnMouseClicked(java.awt.event.MouseEvent evt) {
                clearGanttChart();
                Random rand = new Random();

                for (int i = 0; i < processData.getRowCount(); i++) {
                        int k = rand.nextInt(20);
                        k += 1;
                        for (int j = 1; j < processData.getColumnCount(); j++) {
                                int n = rand.nextInt(25);
                                n += 1;
                                processData.setValueAt(k, i, j++);
                                processData.setValueAt(n, i, j);
                        }
                }

                ArrayList<Process> processes = buildProcessList();
                clearTableData();
                setTableData(processes);
        }

        private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {

                for (int i = 0; i < processData.getRowCount(); i++) {
                        for (int j = 1; j < processData.getColumnCount(); j++) {
                                processData.setValueAt("0", i, j++);
                                processData.setValueAt("0", i, j);
                        }
                }

                ArrayList<Process> processes = buildProcessList();
                clearTable();
                setTableData(processes);
        }

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /*
                 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
                 * look and feel.
                 * For details see
                 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                                        .getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(Interface.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(Interface.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(Interface.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(Interface.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                }
                // </editor-fold>
                // </editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new Interface().setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify
        private javax.swing.JPanel Algorithms;
        private javax.swing.JLabel Throughput;
        private javax.swing.JLabel avgTurnaroundTime;
        private javax.swing.JLabel avgWatingTime;
        private javax.swing.ButtonGroup buttonGroup1;
        private javax.swing.JButton cancelBtn;
        private javax.swing.JPanel changeData;
        private javax.swing.JLabel labelCurrentTime;
        private javax.swing.JRadioButton fcfs_rb;
        private javax.swing.JPanel ganttBackground;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JSeparator jSeparator1;
        private javax.swing.JSeparator jSeparator2;
        private javax.swing.JTabbedPane jTabbedPane1;
        private javax.swing.JLabel labelCurrentProcess;
        private javax.swing.JTable processData;
        private javax.swing.JComboBox<String> quantum;
        private javax.swing.JButton randomBtn;
        private javax.swing.JButton resetBtn;
        private javax.swing.JTable resultsTable;
        private javax.swing.JRadioButton rr_rb;
        private javax.swing.JButton runBtn;
        private javax.swing.JRadioButton sjf_rb;
        private javax.swing.JRadioButton srt_rb;
        private javax.swing.JButton singleStepBtn;
        private javax.swing.JButton example1;
        private javax.swing.JButton example2;
        private javax.swing.JButton example3;
        private javax.swing.JButton example4;
        private javax.swing.JButton example5;
        private javax.swing.JButton set;
        // End of variables declaration

}